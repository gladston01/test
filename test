import groovy.json.JsonSlurper
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

// Define the CSV file path
def csvFilePath = '/path/to/your/output.csv'

// Read the response from the previous sampler
def response = prev.getResponseDataAsString()

// Parse the JSON response
def jsonSlurper = new JsonSlurper()
def jsonResponse = jsonSlurper.parseText(response)

// Extract the "data" array (if your JSON structure uses an array of objects)
def jsonResponse1 = jsonResponse.data

// If the response contains rows of data
if (jsonResponse1 != null && jsonResponse1.size() > 0) {
    // Create the CSV file if it doesn't exist
    if (!Files.exists(Paths.get(csvFilePath))) {
        Files.createFile(Paths.get(csvFilePath))
        
        // Write the header row to the CSV
        def header = jsonResponse1[0].keySet().join(",") + "\n"
        Files.write(Paths.get(csvFilePath), header.getBytes(), StandardOpenOption.APPEND)
    }

    // Iterate over each row of data and write it to the CSV
    jsonResponse1.each { row ->
        // Convert the row map values to a comma-separated string
        def csvRow = row.values().join(",") + "\n"
        
        // Append the row to the CSV file
        Files.write(Paths.get(csvFilePath), csvRow.getBytes(), StandardOpenOption.APPEND)
    }
} else {
    log.info("No data found in response!")
}
