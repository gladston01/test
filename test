import groovy.json.JsonSlurper
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardOpenOption

// Define the CSV file path
def csvFilePath = '/path/to/your/output.csv'

// Read the response from the previous sampler
def response = prev.getResponseDataAsString()

// Parse the JSON response
def jsonSlurper = new JsonSlurper()
def jsonResponse = jsonSlurper.parseText(response)

// Extract the "data" object
def jsonResponse1 = jsonResponse.data

// Check if "data" is empty and set the continueLoop variable
if (jsonResponse1 == null || jsonResponse1.isEmpty()) {
    vars.put("continueLoop", "false")  // Stop the loop
} else {
    vars.put("continueLoop", "true")  // Continue the loop
}

// Create the CSV file if it doesn't exist, and add a header
if (!Files.exists(Paths.get(csvFilePath))) {
    Files.createFile(Paths.get(csvFilePath))
    Files.write(Paths.get(csvFilePath), "Key,Value\n".getBytes(), StandardOpenOption.APPEND)
}

// Iterate over the JSON "data" object and write each key-value pair to the CSV file
jsonResponse1.each { key, value ->
    // Format the key-value pair as a CSV row
    def csvRow = "${key},${value}\n"

    // Append the row to the CSV file
    Files.write(Paths.get(csvFilePath), csvRow.getBytes(), StandardOpenOption.APPEND)
}
